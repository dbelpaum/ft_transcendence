// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	id                      Int           @id @default(autoincrement())
	id42                    Int           @unique
	pseudo                  String        @unique
	firstname               String
	lastname                String
	email                   String        @unique
	bio                     String?
	imageURL                String?
	createdAt               DateTime      @default(now())
	isTwoFactorAuthEnabled  Boolean       @default(false) // Double auth désactivée par défaut
	twoFactorSecret         String? 	  @default("")
	friendshipsAsRequester  Friendship[]  @relation("RequesterRelation")
	friendshipsAsAddressee  Friendship[]  @relation("AddresseeRelation")
	myScores                Score[]       @relation("UserScores1")
	opponentScores          Score[]       @relation("UserScores2")



	@@map("users")
}

model Friendship {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  status      String    @default("friend") // peut être friend, notFriend, blocked
  requesterId Int
  requester   User      @relation("RequesterRelation", fields: [requesterId], references: [id])
  addresseeId Int
  addressee   User      @relation("AddresseeRelation", fields: [addresseeId], references: [id])

  @@unique([requesterId, addresseeId])
}

model Score {
  id          Int      @id @default(autoincrement())
  user1Id     Int
  user1       User     @relation("UserScores1", fields: [user1Id], references: [id])
  user2Id     Int
  user2       User     @relation("UserScores2", fields: [user2Id], references: [id])
  user1Score  Int  
  user2Score  Int     
  playedAt    DateTime @default(now()) 


  @@unique([user1Id, user2Id, playedAt])
}